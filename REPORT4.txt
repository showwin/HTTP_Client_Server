【プログラム仕様】

　<外部仕様>
　　[動作の概要]
　　・コンテンツ内のリンクの一覧を表示し、番号入力によって選択してリンク先のページを表示する。

　　[ファイルの説明・コンパイル方法]
　　・server.java、client.javaがサーバーとクライアントのソースコード。
　　・$ makeすることで、makefileから情報を取ってきて、そこに記述されたようにコンパイルを実行する。

　　[コマンドライン引数の説明]
　　・server側： $ java server (ポート番号)
　　・client側： $ java client
　　　　　　　　 $Request: http://<hostname>[:port]/abs_path 

　　[操作方法]
　　・server側で[java server (ポート番号)]とすることで、サーバーを待機状態にする。
　　・client側で[java client]として、クライアントを立ち上げて、リクエストとして[http://<hostname>[:port]/abs_path]を記述することで、ファイルの内容を取得する。ファイルの内容にaタグによるリンクがあれば、そのリンクが一覧表示される。番号入力をすることで指定したリンクに飛ぶことができる。

　<内部仕様>
　　[モジュール構成]
　　・Server
			- Serverクラス
			- ServerThreadクラス
		・Client
			- Clientクラス
			- Browseクラス			

		[server.javaの説明]
		・1~2行目　ライブラリのインポート
　　・4行目　Serverクラスの定義
　　・5行目　mainメソッドの定義
　　・6行目　Serverを実行するときの引数がなかった場合終了する
　　・10~17行目　ServerSocketのインスタントを作って、クライアントと接続が確率されれば、新たなスレッドを作る。
　　・18~21行目　エラー処理
		・25行目　ServerThreadクラスの定義
		・29~31行目　clientSを初期化する。
		・34行目　startメソッドによって実行されるメソッドの定義
		・36~37行目　サーバーからリクエストを受け取る
		・38~44行目　リクエストを分解する
		・46~49行目　リクエストがGETかどうか判断する
		・52行目　クライアントに対してデータを送るために、PrintStreamのインスタント変数を定義する。
		・54~56行目　ヘッダを送信する。
		・58~67行目　指定されたファイルの内容を読み込んでクライアントに送信する。
		・68行目　送信したことをサーバーのログに残す
		・69~72行目　エラー処理

　　[client.javaの説明]
		・1~3行目　ライブラリのインポート
　　・5行目　Clientクラスの定義
　　・6行目　mainメソッドの定義
　　・9行目~10行目　リクエストを要求、取得する。
　　・11行目　Browseクラスのインスタンスを作る。
		・12行目　リクエストをBrowseクラスの変数に代入する。
		・13~17行目　基本動作のループ
		・18~24行目　エラー処理
		・30~32行目　Browseクラスの中で使う変数を定義
　　・34~36行目　Clientクラスで生成したリクエストをBrowseクラスのクラス変数にするメソッド。
		・38行目　ShowContentsメソッドの定義。
		・40~41行目　メソッド内で使う変数の定義
		・42~55行目　リクエストを分解して、必要な情報を修得する。
		・56~58行目　現在のpathを取得する。
　　・60~63行目　サーバーに送るコマンドを生成する。
　　・66行目　Socketクラスのインスタントを作る。
　　・68~70行目　サーバーに対してリクエストを送信する。
		・72~73行目　サーバーから送られてきたデータを保存する。
		・74~75行目　リンクを探すためにaタグにマッチする正規表現を作る。
　　・80~91行目　保存したデータを一行ずつ表示する。同時にその行にリンクが無いか調べて、あるようなら記憶しておく。
　　・94~104行目　上で保存したリンクをリクエストの形になるように整形する。
		・108~114行目　取得したリンクの一覧を表示するメソッド。
　　・116行目　リンク先の番号入力を受け取ってリクエストに代入するメソッド。
		・118~121行目　リンクの番号入力を取得する。
　　・122~128行目　リクエストを更新する。
　　・129~132行目　エラー処理

【実行例(1)】
　<サーバー側>
　(1) $ java Server 1234
　(4) $ client.java was sent.

　<クライアント側>
　(2) $ java Client
　(3) $ Request: http://localhost:1234/client.java
　(5) $ HTTP/1.1 200 OK
　　　Content-Type: text/c; charset=iso-2022-jp

　　　#include<sys/socket.h>
　　　#include<netinet/in.h>
　　　…
　　　<以下略>

【実行例(2)】
　<クライアント>
	$ java Client
	Request:
	http://www.fos.kuis.kyoto-u.ac.jp/le2soft/
	GET /le2soft/ HTTP/1.1
	Host: www.fos.kuis.kyoto-u.ac.jp:80

	HTTP/1.1 200 OK
	Date: Mon, 26 Nov 2012 08:19:16 GMT
	Server: Apache/2.2.16 (Debian)
	Last-Modified: Wed, 14 Nov 2012 05:57:36 GMT
	ETag: "80d7f-1d8b-4ce6e361cede5"
	<略>
	[List Of links]
	Size Of Links =33
	1. http://www.iimc.kyoto-u.ac.jp/ja/services/ecs/PDF/tebiki_cut/satellite.pdf
	2. http://www.iip.ist.i.kyoto-u.ac.jp/le2swiki/index.php
	3. http://www.fos.kuis.kyoto-u.ac.jp/le2soft/./faq.html
	4. http://www.iip.ist.i.kyoto-u.ac.jp/le2swiki/index.php
　<以下略>
	
【評価】
　<採用した設計について>
　　[正当性]
　　十分である。
　　[効率]
　　冗長な作業はしていないので、妥当であると思われる。

　<完成度、改善の余地>
　　・複数行に渡ってaタグが記述されている場合にはリンクを取得できない。
	　・ページ内リンクの#に対応してない。
